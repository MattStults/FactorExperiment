// Generated by CoffeeScript 1.3.3
(function() {

  $.widget("stults.decoration", {
    options: {
      element: null,
      elementId: "board",
      svg: null
    },
    _setOption: function(key, value) {
      if (key === 'element') {
        this.isBuilt = false;
      }
      return this._super(key, value);
    },
    _setOptions: function(options) {
      this._super(options);
      return this.refresh();
    },
    _build: function() {},
    refresh: function() {
      if (!(this.options.svg != null)) {
        this.options.svg = this.element.svg('get');
      }
      if (!(this.isBuilt != null) || !this.isBuilt) {
        return this._build();
      }
    },
    _create: function() {
      this.element.addClass("decoration");
      if (!(this.options.svg != null)) {
        this.element.svg();
      }
      return this.refresh();
    }
  });

  $.widget("stults.decorationBox", $.stults.decoration, {
    options: {
      title: "",
      value: 0,
      textOffset: [0, -20],
      lineOffset: [5, 5]
    },
    _setOption: function(key, value) {
      if (key === 'element') {
        this.isBuilt = false;
      }
      return this._super(key, value);
    },
    _setOptions: function(options) {
      this._super(options);
      return this.refresh();
    },
    _build: function() {
      var base, bound, _ref;
      base = (_ref = this.options.element) != null ? _ref.boxLine("getGroup") : void 0;
      if (!(base != null)) {
        return false;
      }
      if (this.rootGroup != null) {
        this.options.svg.remove(this.rootGroup);
      }
      bound = base.getBBox();
      this.rootGroup = this.options.svg.group(base, this.options.elementId);
      $(this.rootGroup).addClass("decoration");
      return this.text = util.drawTextAtPoint(this.options.svg, this.rootGroup, [bound.x + bound.width / 2 + this.options.textOffset[0], bound.y + this.options.textOffset[1]], this.options.title + ": " + this.options.value);
    },
    refresh: function() {
      this._super('refresh');
      if (this.text != null) {
        return this.text.text(this.options.title + ": " + this.options.value);
      }
    }
  });

}).call(this);
